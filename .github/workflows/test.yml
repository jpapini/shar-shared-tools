name: Test

on:
    push:
        branches:
            - main

env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SSH_PUBLIC_KEY: ${{ secrets.BOT_SSH_PUBLIC_KEY }}
    SSH_PRIVATE_KEY: ${{ secrets.BOT_SSH_PRIVATE_KEY }}
    GIT_COMMITTER_NAME: 'Julien Papini [bot]'
    GIT_COMMITTER_EMAIL: 'julien.papini+github-bot@gmail.com'

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - name: Setup Git and SSH
              run: |
                  mkdir ~/.ssh
                  echo -e "$SSH_PRIVATE_KEY" >> ~/.ssh/signing_key
                  cat ~/.ssh/signing_key
                  echo -e "$SSH_PUBLIC_KEY" >> ~/.ssh/signing_key.pub
                  cat ~/.ssh/signing_key.pub
                  chmod 600 ~/.ssh/signing_key
                  chmod 600 ~/.ssh/signing_key.pub

                  eval `ssh-agent -s`
                  ssh-add ~/.ssh/signing_key

                  git config --global user.name "$GIT_COMMITTER_NAME"
                  git config --global user.email "$GIT_COMMITTER_EMAIL"

                  git config --global gpg.format ssh
                  git config --global user.signingkey ~/.ssh/signing_key
                  git config --global commit.gpgSign true
                  git config --global tag.gpgSign true

                  touch ~/.ssh/allowed_signers
                  echo "$GIT_COMMITTER_EMAIL $SSH_PUBLIC_KEY" > ~/.ssh/allowed_signers
                  git config --global gpg.ssh.allowedSignersFile ~/.ssh/allowed_signers

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ssh-key: ${{ env.SSH_PRIVATE_KEY }}

            - name: Add a commit for testing signature
              run: |
                  echo 'Test commit signature' > test.txt
                  git add test.txt
                  git commit -m 'Test commit signature'

            - name: Test commit signature
              run: |
                  git log -1 --show-signature
                  git verify-commit HEAD
